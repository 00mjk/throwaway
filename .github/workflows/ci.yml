name: CI

on:
  workflow_dispatch:
  push:

env:
  RUST_VERSION: nightly

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "${{ env.RUST_VERSION }}"

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      - name: Build package
        run: ./scripts/build.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "${{ env.RUST_VERSION }}"
          components: rustfmt, clippy

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          key: "${{ runner.os }}-lint-${{ hashFiles('**/Cargo.lock') }}"
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      - name: Run linters
        run: ./scripts/lint.sh

# FIXME: Make this only run 'unit' tests
#  test:
#    name: Test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Setup Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: "${{ env.RUST_VERSION }}"
#
#      - name: Cache Cargo
#        uses: actions/cache@v2
#        with:
#          key: "${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}"
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#
#      - name: Run tests
#        run: ./scripts/test.sh
